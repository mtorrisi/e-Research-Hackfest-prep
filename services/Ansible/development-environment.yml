---
# Ansible playbook to prepare the course machines ... to execute Ansible.
# Before you run this, make sure that the hosts can be managed.
# run this once-off:
# ansible all -i inventory.ini -m raw '[apt-get,yum] install python2.7 python-simplejson'

# This task doesn't have the benefit of retrieved facts, so you can't do any
# kind of host look up. You have to just know what kind of host you have
- hosts: dev
  name: Low-down and dirty
  gather_facts: false
  tasks:
  - name: Pick up sensitive vars
    include_vars:
      file: "group_vars/passwords-{{ site_name }}.yml"

  - name: Announce the setup
    slack:
      domain: scigaia
      token: "{{ slack_token }}"
      msg: "Running training-lab setup for {{ inventory_hostname }} at {{ site_name }} :worried: "
      channel: "#lagos-hackfest"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    tags:
      - slack

  - name: Low down dirty setup
    become: true
    raw: "apt-get -y install {{ item }}"
    with_items: "{{ managed_prerequisites }}"

  - name: Announce the outcome
    slack:
      domain: ubuntunet.slack.com
      token: "{{ slack_token }}"
      msg: "Running training-lab setup for {{ inventory_hostname }} at {{ site_name }} :ok_hand: "
      channel: "#lagos-hackfest"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    tags:
      - slack

- hosts: dev
  name: Deploy Ansible onto the lab
  tasks:
  - name: Pick up sensitive vars
    include_vars:
      file: "group_vars/passwords-{{ site_name }}.yml"

  - name: Announce the Config play
    slack:
      domain: ubuntunet.slack.com
      token: "{{ slack_token }}"
      msg: "Running training-lab configuration on {{ inventory_hostname }} at {{ site_name }} :worried: "
      channel: "#lagos-hackfest"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    tags:
      - slack

  - name: Install prerequisites
    become: true
    package:
      name: "{{ item }}"
      state: present
    with_items: "{{ prerequisites[ansible_os_family]}}"

  - name: Install Ansible
    become: true
    pip:
      name: ansible
      state: present

  - name: Pull in users
    include_vars:
      file: "../../participants/participants.yml"

  - name: Add users
    become: true
    user:
      name: "{{ item.github.username }}"
      comment: "{{ item.name  }}"
      createhome: true
      generate_ssh_key: true
    with_items: "{{ participants }}"

  - name: Ensure that the participant ssh key on Github is in authorized keys
    become: true
    authorized_key:
      exclusive: no
      manage_dir: yes
      user: "{{ item.github.username }}"
      key: "https://github.com/{{ item.github.username }}.keys"
      state: present
    with_items: "{{ participants }}"

  - name: ensure that the warmups repo is present
    become: true
    git:
      repo: https://github.com/AAROC/hackfest-warmups
      dest: "/home/{{ item.github.username }}/hackfest-warmups"

    with_items:
      "{{ participants }}"
  - name: ensure that the repo belongs to the user
    become: true
    file:
      state: directory
      dest: "{{ item.github.username }}"
      owner: "{{ item.github.username }}"
      recurse: yes
      group: "{{ item.github.username }}"
    with_items: "{{ participants }}"

#
#     # - name: Ensure that the preferred editor is available
#     #   package:
#     #     name: "{{ item.git.core.package[ansible_os_family] }}"
#     #     state: present
#     #   with_items: "{{ participants }}"
#
#     - name: Git config for the users
#       git_config:
#         name: core.editor
#         value: "{{ item.git.core.editor}}"
#         scope: global

  - name: Announce the Config play outcome
    slack:
      domain: scigaia
      token: "{{ slack_token }}"
      msg: "{{ inventory_hostname }} at {{ site_name }} now knows kung-fu :neo:"
      channel: "#lagos-hackfest"
      username: "Ansible on {{ inventory_hostname }}"
      link_names: 1
      parse: 'full'
    tags:
      - slack
