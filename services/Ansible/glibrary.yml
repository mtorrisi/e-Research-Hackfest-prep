---
- hosts: dev
  name: gLibrary play
  tasks:
    - name: Pull vars
      include_vars:
        file: "{{ item }}"
      with_items:
        - "../../participants/participants.yml"
        - "../../participants/projects.yml"
        - "group_vars/passwords-{{ site_name }}.yml"
      tags:
        - variables

    - name: Announce the gLibrary play
      slack:
        domain: scigaia
        token: "{{ slack_token }}"
        msg: "{{ inventory_hostname }} at {{ site_name }} Logging in to gLibrary"
        channel: "#lagos-hackfest"
        username: "Ansible on {{ inventory_hostname }}"
        link_names: 1
        parse: 'full'
      tags:
        - slack

    - name: Get token from gLibrary
      uri:
        HEADERS_: "Content-Type:application/json"
        #headers: "Content-Type:application/json"
        #body: "{{ lookup('file','files/glibrary_login.json') }}"
        body:
          username: "{{ glibrary['admin_user'] }}"
          password: "{{ glibrary_admin_password }}"
        body_format: json
        method: POST
        url: "{{ glibrary.url }}/v2/users/login"
        validate_certs: false
        return_content: yes
        status_code: 200,422
      register: glibrary_token
      tags:
        - login

    - name: Create user on glibrary
      uri:
        HEADER_Content-Type: "application/json"
        #headers: "Content-Type:application/json"
        headers:
          Authorization: "{{ glibrary_token.json.id}}"
        #body: "{{ lookup('file','files/glibrary_login.json') }}"
        body:
          username: "{{ item.github.username }}"
          password: "hackfest"
          email: "{{ item.email }}"
        body_format: json
        method: POST
        url: "{{ glibrary.url }}/v2/users"
        validate_certs: false
        return_content: yes
        status_code: 200,422
      with_items: "{{ participants }}"
      tags:
        - users

    - name: Create project repos
      uri:
        HEADER_Content-Type: "application/json"
        HEADER_Authorization: "{{ glibrary_token.json.id}}"
        body:
          name: "{{ item.name | lower | replace ('-','_')}}"
        body_format: json
        method: POST
        url: "{{ glibrary.url }}/v2/repos"
        validate_certs: false
        return_content: yes
        status_code: 200,409
      with_items: "{{ projects }}"
      tags:
        - repos

    - name: Set ACLs
      uri:
        HEADER_Content-Type: "application/json"
        HEADER_Authorization: "{{ glibrary_token.json.id}}"
        body:
          username: "{{ item.members[0]}}"
          permissions: "RW"
        body_format: json
        method: POST
        url: "{{ glibrary.url }}/v2/repos/{{ item.name | lower | replace ('-','_')}}/_acls/"
        validate_certs: false
        return_content: yes
        status_code: 200,409
      when: "{{ item.members }}"
      with_items: "{{ projects }}"
      tags:
        - repos
        - acls

    - name: Announce the Config play outcome
      slack:
        domain: scigaia
        token: "{{ slack_token }}"
        msg: "Created users and repos on gLibrary"
        channel: "#lagos-hackfest"
        username: "Ansible on {{ inventory_hostname }}"
        link_names: 1
        parse: 'full'
      tags:
        - slack
